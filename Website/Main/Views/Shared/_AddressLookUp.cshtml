<h1 style="color:white">Enter an address you want to look up:</h1>
<br>
@using (Html.BeginForm("StreetView", "ATTOM", FormMethod.Get))
{
    <label for="streetAddress" style="color:white">Enter a Street Address: </label>
    <input type="text" id="streetAddress" name="streetAddress" required>
    <br>
    <label for="cityName" style="color:white">Enter a City: </label>
    <input type="text" name="cityName" id="city" required>
    <br>
    <label for="stateAbbrev" style="color:white">Select a state: </label>
    <select name="stateAbbrev" id="states" required>
        <option value="" disabled>Choose a state</option>
    </select>
    <br><br>
    <input id="submit_button" type="submit" value="Submit">
}

@section Scripts {

function validate() {
  $("input.positive-numeric-only").on("keydown", function(e) {
       var char = e.originalEvent.key.replace(/[^0-9^.^,]/, "");
       if (char.length == 0 && !(e.originalEvent.ctrlKey || e.originalEvent.metaKey)) {
         e.preventDefault();
       }
     });
   
      //prevent bad user input
     $("input.positive-numeric-only").bind("paste", function(e) {
       var numbers = e.originalEvent.clipboardData
         .getData("text")
         .replace(/[^0-9^.^,]/g, "");
       e.preventDefault();
       var the_val = parseInt(numbers);
       if (the_val > 0) {
         $(this).val(the_val.toFixed(0));
       }
     });
   
      //prevent bad user input
     $("input.positive-numeric-only").focusout(function(e) {
       if (!isNaN(this.value) && this.value.length != 0) {
         this.value = Math.abs(parseInt(this.value)).toFixed(0);
       } else {
         this.value = 0;
       }
     });   
}  
}